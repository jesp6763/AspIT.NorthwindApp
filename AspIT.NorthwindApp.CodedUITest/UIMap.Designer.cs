// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace AspIT.NorthwindApp.CodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Selects an employee, changes the first name and then presses the save button
        /// </summary>
        public void EditEmployeeTest1()
        {
            #region Variable Declarations
            WpfControl uIItemDataItem = this.UIEmployeeOverwatchWindow.UIEmployeeListTable.UIItemDataItem;
            WpfEdit uIFirstNameTbEdit = this.UIEmployeeOverwatchWindow.UIPersonligeoplysningeGroup.UIFirstNameTbEdit;
            WpfButton uIGemændringerButton = this.UIEmployeeOverwatchWindow.UIGemændringerButton;
            #endregion

            // Click DataItem
            Mouse.Click(uIItemDataItem, new Point(1265, 42));

            // Click 'firstNameTb' text box
            Mouse.Click(uIFirstNameTbEdit, new Point(49, 6));

            // Type 'Control + {Back}' in 'firstNameTb' text box
            Keyboard.SendKeys(uIFirstNameTbEdit, this.EditEmployeeTest1Params.UIFirstNameTbEditSendKeys, ModifierKeys.Control);

            // Type 'Paulie' in 'firstNameTb' text box
            uIFirstNameTbEdit.Text = this.EditEmployeeTest1Params.UIFirstNameTbEditText;

            // Type '{Enter}' in 'firstNameTb' text box
            Keyboard.SendKeys(uIFirstNameTbEdit, this.EditEmployeeTest1Params.UIFirstNameTbEditSendKeys1, ModifierKeys.None);

            // Click 'Gem ændringer' button
            Mouse.Click(uIGemændringerButton, new Point(43, 12));
        }
        
        #region Properties
        public virtual EditEmployeeTest1Params EditEmployeeTest1Params
        {
            get
            {
                if ((this.mEditEmployeeTest1Params == null))
                {
                    this.mEditEmployeeTest1Params = new EditEmployeeTest1Params();
                }
                return this.mEditEmployeeTest1Params;
            }
        }
        
        public UIEmployeeOverwatchWindow UIEmployeeOverwatchWindow
        {
            get
            {
                if ((this.mUIEmployeeOverwatchWindow == null))
                {
                    this.mUIEmployeeOverwatchWindow = new UIEmployeeOverwatchWindow();
                }
                return this.mUIEmployeeOverwatchWindow;
            }
        }
        #endregion
        
        #region Fields
        private EditEmployeeTest1Params mEditEmployeeTest1Params;
        
        private UIEmployeeOverwatchWindow mUIEmployeeOverwatchWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EditEmployeeTest1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class EditEmployeeTest1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + {Back}' in 'firstNameTb' text box
        /// </summary>
        public string UIFirstNameTbEditSendKeys = "{Back}";
        
        /// <summary>
        /// Type 'Paulie' in 'firstNameTb' text box
        /// </summary>
        public string UIFirstNameTbEditText = "Paulie";
        
        /// <summary>
        /// Type '{Enter}' in 'firstNameTb' text box
        /// </summary>
        public string UIFirstNameTbEditSendKeys1 = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeOverwatchWindow : WpfWindow
    {
        
        public UIEmployeeOverwatchWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "Employee Overwatch";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Employee Overwatch");
            #endregion
        }
        
        #region Properties
        public UIEmployeeListTable UIEmployeeListTable
        {
            get
            {
                if ((this.mUIEmployeeListTable == null))
                {
                    this.mUIEmployeeListTable = new UIEmployeeListTable(this);
                }
                return this.mUIEmployeeListTable;
            }
        }
        
        public UIPersonligeoplysningeGroup UIPersonligeoplysningeGroup
        {
            get
            {
                if ((this.mUIPersonligeoplysningeGroup == null))
                {
                    this.mUIPersonligeoplysningeGroup = new UIPersonligeoplysningeGroup(this);
                }
                return this.mUIPersonligeoplysningeGroup;
            }
        }
        
        public WpfButton UIGemændringerButton
        {
            get
            {
                if ((this.mUIGemændringerButton == null))
                {
                    this.mUIGemændringerButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIGemændringerButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "editBtn";
                    this.mUIGemændringerButton.WindowTitles.Add("Employee Overwatch");
                    #endregion
                }
                return this.mUIGemændringerButton;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeListTable mUIEmployeeListTable;
        
        private UIPersonligeoplysningeGroup mUIPersonligeoplysningeGroup;
        
        private WpfButton mUIGemændringerButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIEmployeeListTable : WpfTable
    {
        
        public UIEmployeeListTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "employeeList";
            this.WindowTitles.Add("Employee Overwatch");
            #endregion
        }
        
        #region Properties
        public WpfControl UIItemDataItem
        {
            get
            {
                if ((this.mUIItemDataItem == null))
                {
                    this.mUIItemDataItem = new WpfControl(this);
                    #region Search Criteria
                    this.mUIItemDataItem.SearchProperties[WpfControl.PropertyNames.ControlType] = "DataItem";
                    this.mUIItemDataItem.WindowTitles.Add("Employee Overwatch");
                    #endregion
                }
                return this.mUIItemDataItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfControl mUIItemDataItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPersonligeoplysningeGroup : WpfGroup
    {
        
        public UIPersonligeoplysningeGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.AutomationId] = "groupBox";
            this.WindowTitles.Add("Employee Overwatch");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIFirstNameTbEdit
        {
            get
            {
                if ((this.mUIFirstNameTbEdit == null))
                {
                    this.mUIFirstNameTbEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIFirstNameTbEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "firstNameTb";
                    this.mUIFirstNameTbEdit.WindowTitles.Add("Employee Overwatch");
                    #endregion
                }
                return this.mUIFirstNameTbEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIFirstNameTbEdit;
        #endregion
    }
}
